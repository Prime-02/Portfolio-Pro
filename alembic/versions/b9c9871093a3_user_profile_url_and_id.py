"""user profile url and id

Revision ID: b9c9871093a3
Revises: 
Create Date: 2025-07-26 20:58:42.883595

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b9c9871093a3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_portfolio_pro_app_universities_country'), table_name='universities', schema='portfolio_pro_app')
    op.drop_index(op.f('ix_portfolio_pro_app_universities_id'), table_name='universities', schema='portfolio_pro_app')
    op.drop_table('universities', schema='portfolio_pro_app')
    op.drop_index(op.f('ix_portfolio_pro_app_tech_professions_id'), table_name='tech_professions', schema='portfolio_pro_app')
    op.drop_table('tech_professions', schema='portfolio_pro_app')
    op.drop_table('alembic_version')
    op.drop_column('social_links', 'profile_headline', schema='portfolio_pro_app')
    op.drop_column('social_links', 'url_type', schema='portfolio_pro_app')
    op.drop_column('user_profile', 'profile_picture_id', schema='portfolio_pro_app')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_profile', sa.Column('profile_picture_id', sa.VARCHAR(), autoincrement=False, nullable=True), schema='portfolio_pro_app')
    op.add_column('social_links', sa.Column('url_type', sa.VARCHAR(), autoincrement=False, nullable=True), schema='portfolio_pro_app')
    op.add_column('social_links', sa.Column('profile_headline', sa.VARCHAR(), autoincrement=False, nullable=True), schema='portfolio_pro_app')
    op.create_table('alembic_version',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name=op.f('alembic_version_pkc'))
    )
    op.create_table('tech_professions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('profession_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('job_title', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('field_category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('tech_professions_pkey')),
    schema='portfolio_pro_app'
    )
    op.create_index(op.f('ix_portfolio_pro_app_tech_professions_id'), 'tech_professions', ['id'], unique=False, schema='portfolio_pro_app')
    op.create_table('universities',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('alpha_two_code', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('state_province', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('domains', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.Column('web_pages', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('universities_pkey')),
    schema='portfolio_pro_app'
    )
    op.create_index(op.f('ix_portfolio_pro_app_universities_id'), 'universities', ['id'], unique=False, schema='portfolio_pro_app')
    op.create_index(op.f('ix_portfolio_pro_app_universities_country'), 'universities', ['country'], unique=False, schema='portfolio_pro_app')
    # ### end Alembic commands ###
